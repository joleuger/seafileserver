#!/bin/bash

export DEBIAN_FRONTEND=noninteractive

. /etc/os-release
echo $UBUNTU_CODENAME
mkdir -p /etc/apt
echo deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_CODENAME main restricted universe multiverse > /etc/apt/sources.list
echo deb http://archive.ubuntu.com/ubuntu/ $UBUNTU_CODENAME-updates main restricted universe multiverse >> /etc/apt/sources.list
echo deb http://security.ubuntu.com/ubuntu/ $UBUNTU_CODENAME-security main restricted universe multiverse >> /etc/apt/sources.list


apt-get update -qq

apt-get install -qy systemd dbus libpam-systemd systemd-container net-tools procps tzdata sudo apt-utils

systemctl enable system-first-run.service
systemctl enable system-update.service
chmod 755 /usr/local/sbin/system-first-run.sh
chmod 755 /usr/local/sbin/system-update.sh
ln -s /settings/hostname /etc/hostname --force
systemctl enable systemd-networkd.service
systemctl enable systemd-resolved.service
systemctl enable seafile.service

mkdir -p /settings
cp /etc/timezone /settings
ln -sf /settings/timezone /etc/timezone
mkdir -p /etc/systemd/network                                                   
ln -s /settings/60-host0.network /etc/systemd/network --force

# create storage directory
mkdir -p /storage

apt-get install -qy iputils-ping
apt-get remove -qy makedev

apt-get install -qy libjansson-dev libzdb-dev valac libarchive-dev libcurl4-openssl-dev libglib2.0-dev uuid-dev intltool libsqlite3-dev libmysqlclient-dev libtool git libssh-dev apt-utils vim cmake
#apt-get install -qy libev-libevent-dev libevhtp-dev # DO NEVER INSTALL THOSE!!!!
apt-get install -qy libevent-dev
apt-get install -qy build-essential
apt-get install -qy libevent-dev libcurl4-openssl-dev libglib2.0-dev uuid-dev intltool libsqlite3-dev libmysqlclient-dev libarchive-dev libtool libjansson-dev valac libfuse-dev re2c flex python-setuptools cmake
apt-get install -qy libldap2-dev sqlite3


apt-get install -qy python-pip
pip install --upgrade pip
#apt-get install -qy python-django tz-converter python-arrow python-djangorestframework 

mkdir -p /build
cd /build

#git clone https://github.com/ellzey/libevhtp.git
#git clone https://github.com/criticalstack/libevhtp.git
git clone https://www.github.com/haiwen/libevhtp.git
cd libevhtp
#git checkout tags/1.1.7
cmake -DEVHTP_DISABLE_SSL=ON -DEVHTP_BUILD_SHARED=OFF .
make
sudo make install
cp oniguruma/onigposix.h /usr/local/include
ldconfig
cd ..

export PKG_CONFIG_PATH=/build/seafile/lib:$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/build/libsearpc:$PKG_CONFIG_PATH
export PKG_CONFIG_PATH=/build/ccnet-server:$PKG_CONFIG_PATH

git clone https://github.com/haiwen/libsearpc.git
cd libsearpc
git checkout tags/v3.1-latest
./autogen.sh; ./configure
make dist
git checkout tags/v3.0-latest
./autogen.sh; ./configure
make dist
cd ..

#git clone https://github.com/haiwen/ccnet.git
#cd ccnet
#git checkout tags/v6.1.7
#./autogen.sh; ./configure; make; make install
#cd ..


git clone https://github.com/haiwen/ccnet-server.git
cd ccnet-server
git checkout tags/v6.2.5-server
./autogen.sh
./configure  --without-mysql --without-postgresql
#make; make install
make dist
cd ..

git clone https://github.com/haiwen/seafile-server.git
cd seafile-server
git checkout tags/v6.2.5-server
#./autogen.sh; ./configure --disable-fuse CPPFLAGS="-I/usr/include/evhtp/"
./autogen.sh
./configure
#make && make install
make dist
cd ..

git clone https://github.com/haiwen/seafobj.git
cd seafobj
git reset --hard v6.2.5-server
make dist
cd ..

git clone https://github.com/haiwen/seafdav.git
cd seafdav
git reset --hard v6.2.5-server
make
cd ..


git clone https://github.com/haiwen/django-constance.git
cd django-constance
python setup.py install
cd ..

cd /build
git clone https://github.com/haiwen/seahub.git
cd seahub
git checkout tags/v6.2.5-server
#rm -rf .git
pip install -r requirements.txt
pip install gunicorn
pip install flup
ldconfig
tools/gen-tarball.py --version=6.0.1 --branch=HEAD

mkdir -p /root/seafile-sources/pythonpackages
cd /root/seafile-sources/pythonpackages
pip download --no-binary=:all: -r /build/seahub/requirements.txt
pip download --no-binary=:all: gunicorn
pip download --no-binary=:all: flup
mkdir -p /root/seafile-sources/thirdpart
cd /root/seafile-sources/thirdpart
export PYTHONPATH=.
for pack in $(ls /root/seafile-sources/pythonpackages); do easy_install -d . /root/seafile-sources/pythonpackages/$pack; done
#easy_install -d . /build/django-constance



mkdir ~/seafile-sources
cp /build/libsearpc/libsearpc-3.0.8.tar.gz ~/seafile-sources
cp /build/ccnet-server/ccnet-6.0.1.tar.gz ~/seafile-sources
cp /build/seafile-server/seafile-6.0.1.tar.gz ~/seafile-sources
cp /build/seahub/seahub-6.0.1.tar.gz ~/seafile-sources
cp /build/seafobj/seafobj.tar.gz ~/seafile-sources
cp /build/seafdav/seafdav.tar.gz ~/seafile-sources
mkdir ~/seafile-server-pkgs
/build/seafile-server/scripts/build/build-server.py --libsearpc_version=3.0.8 --ccnet_version=6.0.1 --seafile_version=6.0.1 --thirdpartdir=/root/seafile-sources/thirdpart --srcdir=/root/seafile-sources/ --outputdir=/root/seafile-server-pkgs --version=6.2.5
#/build/seafile-server/scripts/build/build-server.py --libsearpc_version=3.0.8 --ccnet_version=6.0.1 --seafile_version=6.0.1 --thirdpartdir=/usr/local/lib/python2.7/dist-packages/ --srcdir=/root/seafile-sources/ --outputdir=/root/seafile-server-pkgs --version=6.2.5


mkdir -p /opt/seafile
cd /opt/seafile
tar xzvf /root/seafile-server-pkgs/seafile-server_6.2.5_x86-64.tar.gz
ln -s /opt/seafile/seafile-server-6.2.5 /opt/seafile/seafile-server-latest


# setup systemd configurations
ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf --force



ln -s /settings/ccnet /opt/seafile/ccnet
ln -s /storage/seahub-data /opt/seafile/seahub-data
ln -s /storage/seahub.db /opt/seafile/seahub.db
ln -s /settings/conf /opt/seafile/conf

rm -rf /build
exit
